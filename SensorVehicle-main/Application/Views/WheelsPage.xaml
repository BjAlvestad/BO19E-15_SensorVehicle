<Page
    x:Class="Application.Views.WheelsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Style="{StaticResource PageStyle}"
    xmlns:prismMvvm="using:Prism.Windows.Mvvm"
    prismMvvm:ViewModelLocator.AutoWireViewModel="True" 
    mc:Ignorable="d">
    <Grid
        x:Name="ContentArea"
        Margin="{StaticResource MediumLeftRightMargin}">
        <Grid
            Background="{ThemeResource SystemControlPageBackgroundChromeLowBrush}">
            <!--The SystemControlPageBackgroundChromeLowBrush background represents where you should place your content. 
                Place your content here.-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="20" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="20" />
                <RowDefinition Height="Auto" MinHeight="50" />
            </Grid.RowDefinitions>

            <!--WHEELS MANUAL CONTROL-->
            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0">
                <RelativePanel>
                    <Button x:Name="StopWheelButton" Content="Stop wheels" FontSize="39" Click="{x:Bind ViewModel.StopWheels}" RelativePanel.AlignTopWithPanel="True"/>

                    <StackPanel Orientation="Horizontal" x:Name="SliderPanel" RelativePanel.Below="StopWheelButton" RelativePanel.AlignLeftWith="StopWheelButton">
                        <Slider Value="{x:Bind ViewModel.LeftWheel, Mode=TwoWay }" Orientation="Vertical" Minimum="-100" Maximum="100" MinHeight="200"/>
                        <Slider Value="{x:Bind ViewModel.RightWheel, Mode=TwoWay }" Orientation="Vertical" Minimum="-100" Maximum="100" MinHeight="200"/>
                    </StackPanel>

                    <StackPanel RelativePanel.Below="StopWheelButton" RelativePanel.RightOf="SliderPanel">
                        <ToggleSwitch Header="Apply wheelspeed" OffContent="On button click" OnContent="Automatically" IsOn="{x:Bind ViewModel.ApplyWheelSpeedContinously, Mode=TwoWay}" />
                        <Button Content="Apply new wheelspeed" Click="{x:Bind ViewModel.ApplyNewWheelSpeed}"
                                Visibility="{x:Bind ViewModel.ApplyWheelSpeedContinously, Mode=OneWay, Converter={StaticResource BooleanNegationToVisibilityConverter}}"/>
                        <TextBox Text="{x:Bind ViewModel.UpdateInterval, Mode=TwoWay}" Description="Update interval"
                                 Visibility="{x:Bind ViewModel.ApplyWheelSpeedContinously, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                </RelativePanel>
            </StackPanel>

            <!--WHEEL AND ENCODER DATA-->
            <StackPanel Grid.Row="0" Grid.Column="2">
                <!--WHEEL DATA-->
                <!--TODO: Rewrite to relative panel instead of stack pannel (or some other way of organization that is more flexible than the current one)-->
                <StackPanel Orientation="Horizontal" >
                    <StackPanel>
                        <TextBlock Text="POWER:" FontWeight="Bold" Margin="0, 10, 0, 0"/>
                        <TextBlock Text="Requested [%]:"/>
                        <TextBlock Text="Actual [%]:"/>              
                    </StackPanel>
                    <StackPanel Margin="10, 0">
                        <TextBlock Text="Left:" FontWeight="Bold" Margin="0, 0, 0, 10"/>
                        <TextBlock Text="{x:Bind ViewModel.Wheel.CurrentSpeedLeft, Mode=OneWay}" />
                        <TextBlock Text="ToDo" Margin="0, 0, 0, 50"/>
                    </StackPanel>
                    <StackPanel>
                        <TextBlock Text="Right:" FontWeight="Bold" Margin="0, 0, 0, 10"/>
                        <TextBlock Text="{x:Bind ViewModel.Wheel.CurrentSpeedRight, Mode=OneWay}" />
                        <TextBlock Text="ToDo" Margin="0, 0, 0, 50"/>
                    </StackPanel>
                </StackPanel>

                <!--ENCODER DATA-->
                <RelativePanel Visibility="{x:Bind ViewModel.Encoders.RaiseNotificationForSelective, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" >
                    <TextBlock x:Name="EncoderHeading"  Text="ENCODER:" FontWeight="Bold" Margin="0,0,30,0" RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignLeftWithPanel="True"/>
                    <TextBlock x:Name="LeftEncoder" Text="Left" FontWeight="Bold" Margin="30,0" RelativePanel.AlignVerticalCenterWith="EncoderHeading" RelativePanel.RightOf="EncoderHeading" />
                    <TextBlock x:Name="RightEncoder" Text="Right" FontWeight="Bold" RelativePanel.AlignVerticalCenterWith="EncoderHeading" RelativePanel.RightOf="LeftEncoder" />

                    <TextBlock x:Name="TotalText" Text="Total:" FontWeight="Bold" Margin="0, 5, 0, 0" RelativePanel.Below="LeftEncoder" RelativePanel.AlignLeftWith="EncoderHeading"/>

                    <TextBlock x:Name="TotalDistanceText" Text="Distance [cm]:" RelativePanel.Below="TotalText" RelativePanel.AlignLeftWith="TotalText"/>
                    <TextBlock Text="{x:Bind ViewModel.Encoders.Left.TotalDistanceTravelled, Mode=OneWay}"
                               RelativePanel.AlignVerticalCenterWith="TotalDistanceText" RelativePanel.AlignHorizontalCenterWith="LeftEncoder" />
                    <TextBlock Text="{x:Bind ViewModel.Encoders.Right.TotalDistanceTravelled, Mode=OneWay}"
                               RelativePanel.AlignVerticalCenterWith="TotalDistanceText" RelativePanel.AlignHorizontalCenterWith="RightEncoder" />

                    <TextBlock x:Name="TotalDurationText" Text="Duration:" RelativePanel.Below="TotalDistanceText" RelativePanel.AlignLeftWith="TotalText"/>
                    <TextBlock Text="{x:Bind ViewModel.Encoders.Left.TotalTime, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:hh\\\\:mm\\\\:ss}'}"
                               RelativePanel.AlignVerticalCenterWith="TotalDurationText" RelativePanel.AlignHorizontalCenterWith="LeftEncoder" />
                    <TextBlock Text="{x:Bind ViewModel.Encoders.Right.TotalTime, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:hh\\\\:mm\\\\:ss}'}"
                               RelativePanel.AlignVerticalCenterWith="TotalDurationText" RelativePanel.AlignHorizontalCenterWith="RightEncoder" />

                    <TextBlock x:Name="LastText" Text="Last collected:" FontWeight="Bold" Margin="0, 5, 0, 0" RelativePanel.Below="TotalDurationText" RelativePanel.AlignLeftWith="EncoderHeading"/>

                    <TextBlock x:Name="LastDistanceText"  Text="Distance [m]:" RelativePanel.Below="LastText" RelativePanel.AlignLeftWith="LastText" />
                    <TextBlock Text="{x:Bind ViewModel.Encoders.Left.DistanceAtLastRequest, Mode=OneWay}"
                               RelativePanel.AlignVerticalCenterWith="LastDistanceText" RelativePanel.AlignHorizontalCenterWith="LeftEncoder" />
                    <TextBlock Text="{x:Bind ViewModel.Encoders.Right.DistanceAtLastRequest, Mode=OneWay}"
                               RelativePanel.AlignVerticalCenterWith="LastDistanceText" RelativePanel.AlignHorizontalCenterWith="RightEncoder" />

                    <TextBlock x:Name="LastDurationText" Text="Duration: [ms]:"  RelativePanel.Below="LastDistanceText" RelativePanel.AlignLeftWith="LastText" />
                    <TextBlock Text="{x:Bind ViewModel.Encoders.Left.TimeAccumulatedForLastRequest, Mode=OneWay}"
                               RelativePanel.AlignVerticalCenterWith="LastDurationText" RelativePanel.AlignHorizontalCenterWith="LeftEncoder" />
                    <TextBlock Text="{x:Bind ViewModel.Encoders.Right.TimeAccumulatedForLastRequest, Mode=OneWay}"
                               RelativePanel.AlignVerticalCenterWith="LastDurationText" RelativePanel.AlignHorizontalCenterWith="RightEncoder" />

                    <TextBlock x:Name="VelocityText" Text="Velocity (cm/s):"  RelativePanel.Below="LastDurationText" RelativePanel.AlignLeftWith="LastText" />
                    <TextBlock Text="{x:Bind ViewModel.Encoders.Left.AvgVel, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:F1}'}"
                               RelativePanel.AlignVerticalCenterWith="VelocityText" RelativePanel.AlignHorizontalCenterWith="LeftEncoder" />
                    <TextBlock Text="{x:Bind ViewModel.Encoders.Right.AvgVel, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:F1}'}"
                               RelativePanel.AlignVerticalCenterWith="VelocityText" RelativePanel.AlignHorizontalCenterWith="RightEncoder" />
                </RelativePanel>
            </StackPanel>

            <!--SELECTOR SWITCHES box (contains switches for power, to raise selective property changed etc.)-->
            <StackPanel  Grid.Row="0" Grid.Column="4">
                <ToggleSwitch Header="Display wheel data" OffContent="Off" OnContent="On" IsOn="{x:Bind ViewModel.Wheel.RaiseNotificationForSelective, Mode=TwoWay}" />
                <ToggleSwitch Header="Display distance data" OffContent="Off" OnContent="On" IsOn="{x:Bind ViewModel.Encoders.RaiseNotificationForSelective, Mode=TwoWay}" />
                <ToggleSwitch Header="Autocollect distance" OffContent="Off" OnContent="Collecting" IsOn="{x:Bind ViewModel.Encoders.CollectContinously, Mode=TwoWay}" />
                <TextBox Text="{x:Bind ViewModel.Encoders.CollectionInterval, Mode=TwoWay}" Description="Collection interval"
                            Visibility="{x:Bind ViewModel.Encoders.CollectContinously, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Button Content="Collect now" Click="{x:Bind ViewModel.Encoders.CollectAndResetDistanceFromEncoders}"
                        Visibility="{x:Bind ViewModel.Encoders.CollectContinously, Mode=OneWay, Converter={StaticResource BooleanNegationToVisibilityConverter}}"/>
                <Button Content="Reset total &#x0a;distance travled" Click="{x:Bind ViewModel.Encoders.ResetTotalDistanceTraveled}" />
            </StackPanel>

            <!--ERROR MESSAGE box (displays error messages from )-->
            <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5">
                <TextBlock Text="{x:Bind ViewModel.Wheel.Message, Mode=OneWay}" TextWrapping="Wrap"
                           Tapped="{x:Bind ViewModel.Wheel.ClearMessage, Mode=OneWay}" />
                <TextBlock Text="{x:Bind ViewModel.Encoders.Message, Mode=OneWay}" TextWrapping="Wrap"
                           Tapped="{x:Bind ViewModel.Encoders.ClearMessage, Mode=OneWay}" />
            </StackPanel>
        </Grid>
    </Grid>
</Page>
